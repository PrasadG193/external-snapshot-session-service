// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.12
// source: schema.proto

package grpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// SnapshotMetadataClient is the client API for SnapshotMetadata service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SnapshotMetadataClient interface {
	// rpc GetAllocated(GetAllocatedRequest) returns (stream GetAllocatedResponse) {}
	GetDelta(ctx context.Context, in *GetDeltaRequest, opts ...grpc.CallOption) (SnapshotMetadata_GetDeltaClient, error)
}

type snapshotMetadataClient struct {
	cc grpc.ClientConnInterface
}

func NewSnapshotMetadataClient(cc grpc.ClientConnInterface) SnapshotMetadataClient {
	return &snapshotMetadataClient{cc}
}

func (c *snapshotMetadataClient) GetDelta(ctx context.Context, in *GetDeltaRequest, opts ...grpc.CallOption) (SnapshotMetadata_GetDeltaClient, error) {
	stream, err := c.cc.NewStream(ctx, &SnapshotMetadata_ServiceDesc.Streams[0], "/SnapshotMetadata/GetDelta", opts...)
	if err != nil {
		return nil, err
	}
	x := &snapshotMetadataGetDeltaClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SnapshotMetadata_GetDeltaClient interface {
	Recv() (*GetDeltaResponse, error)
	grpc.ClientStream
}

type snapshotMetadataGetDeltaClient struct {
	grpc.ClientStream
}

func (x *snapshotMetadataGetDeltaClient) Recv() (*GetDeltaResponse, error) {
	m := new(GetDeltaResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SnapshotMetadataServer is the server API for SnapshotMetadata service.
// All implementations must embed UnimplementedSnapshotMetadataServer
// for forward compatibility
type SnapshotMetadataServer interface {
	// rpc GetAllocated(GetAllocatedRequest) returns (stream GetAllocatedResponse) {}
	GetDelta(*GetDeltaRequest, SnapshotMetadata_GetDeltaServer) error
	mustEmbedUnimplementedSnapshotMetadataServer()
}

// UnimplementedSnapshotMetadataServer must be embedded to have forward compatible implementations.
type UnimplementedSnapshotMetadataServer struct {
}

func (UnimplementedSnapshotMetadataServer) GetDelta(*GetDeltaRequest, SnapshotMetadata_GetDeltaServer) error {
	return status.Errorf(codes.Unimplemented, "method GetDelta not implemented")
}
func (UnimplementedSnapshotMetadataServer) mustEmbedUnimplementedSnapshotMetadataServer() {}

// UnsafeSnapshotMetadataServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SnapshotMetadataServer will
// result in compilation errors.
type UnsafeSnapshotMetadataServer interface {
	mustEmbedUnimplementedSnapshotMetadataServer()
}

func RegisterSnapshotMetadataServer(s grpc.ServiceRegistrar, srv SnapshotMetadataServer) {
	s.RegisterService(&SnapshotMetadata_ServiceDesc, srv)
}

func _SnapshotMetadata_GetDelta_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetDeltaRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SnapshotMetadataServer).GetDelta(m, &snapshotMetadataGetDeltaServer{stream})
}

type SnapshotMetadata_GetDeltaServer interface {
	Send(*GetDeltaResponse) error
	grpc.ServerStream
}

type snapshotMetadataGetDeltaServer struct {
	grpc.ServerStream
}

func (x *snapshotMetadataGetDeltaServer) Send(m *GetDeltaResponse) error {
	return x.ServerStream.SendMsg(m)
}

// SnapshotMetadata_ServiceDesc is the grpc.ServiceDesc for SnapshotMetadata service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SnapshotMetadata_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "SnapshotMetadata",
	HandlerType: (*SnapshotMetadataServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetDelta",
			Handler:       _SnapshotMetadata_GetDelta_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "schema.proto",
}
